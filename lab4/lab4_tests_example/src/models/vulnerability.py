import math
from src.app.damage_modifiers import DamageModifier


class Vulnerability(DamageModifier):
    def __init__(self, factor: float = 1.5):
        self.factor = float(factor)

    def modify(self, attacker, weapon, defender, damage: int) -> int:
        return damage

    def after_attack(
        self, attacker, weapon, target, critical: bool, damage: int
    ):
        if damage <= 0 or self.factor <= 1.0:
            return 0, None
        extra = int(math.ceil(damage * (self.factor - 1.0)))
        return extra, f"(Vulnerabilidad x{self.factor:g})"
